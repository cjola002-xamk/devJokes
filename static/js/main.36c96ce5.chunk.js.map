{"version":3,"sources":["components/SavedJokes.js","components/Jokes.js","components/TopHeader.js","components/DeleteJoke.js","components/AddJoke.js","components/BottomFooter.js","App.js","reportWebVitals.js","index.js"],"names":["SavedJokes","props","jokeArray","length","className","Typography","variant","map","joke","idx","Card","CardContent","setup","delivery","IconButton","component","Link","to","id","Jokes","console","log","jokeData","onClick","getJoke","aria-label","setJokeArray","TopHeader","useState","showMenu","setShowMenu","AppBar","position","Toolbar","edge","color","Drawer","open","onClose","List","ListItem","button","ListItemIcon","DeleteJoke","history","useHistory","useParams","targetJoke","filter","helperVar","push","deleteTargetJoke","AddJoke","userJoke","setUserJoke","text","error","setError","TextField","label","multiline","rows","fullWidth","onChange","e","uuid","target","value","some","style","require","BottomFooter","App","setJokeData","jokeDataRetrieved","setJokeDataRetrieved","a","fetch","conn","json","data","type","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","basename","path","exact","Backdrop","CircularProgress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36c96ce5.chunk.js","sourcesContent":["import { Card, CardContent, IconButton, Typography } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SavedJokes(props){\r\n\r\n\r\n    if(props.jokeArray.length > 0){\r\n        return(\r\n            <div className=\"savedJokes\">\r\n                <div className=\"savedJokesContainer\">\r\n                    <Typography variant=\"h4\" className=\"savedJokesHeader\">Saved jokes</Typography>\r\n    \r\n                    { props.jokeArray.map((joke, idx) => (\r\n    \r\n                        <div key={idx} className=\"jokeCardWrapper\">\r\n                            <Card className=\"jokeCard\">\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\">{ joke.setup }</Typography>\r\n                                <Typography variant=\"h5\">{ joke.delivery }</Typography>\r\n                            </CardContent>\r\n                            </Card>\r\n                        \r\n    \r\n                            <IconButton\r\n                                component={Link}\r\n                                to={`/deletejoke/${joke.id}`}\r\n                                variant=\"contained\"\r\n                            >\r\n                                <DeleteIcon/>\r\n                                <Typography variant=\"h6\">DeleteJoke</Typography>\r\n                            </IconButton>\r\n                        </div>\r\n    \r\n                    )) }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div className=\"savedJokes\">\r\n            <div className=\"savedJokesContainer\">\r\n                <Typography variant=\"h4\" className=\"savedJokesHeader\">Saved jokes</Typography>\r\n                <Typography variant=\"h5\">There is no saved jokes</Typography>\r\n\r\n\r\n            </div>\r\n        </div>\r\n        );  \r\n    }\r\n\r\n\r\n};\r\n\r\nexport default SavedJokes;","import { Card, CardContent, IconButton, Typography } from \"@material-ui/core\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nfunction Jokes(props){\r\n\r\n    //saving Joke:\r\n    const saveJoke = () =>{\r\n        \r\n      props.setJokeArray([...props.jokeArray, props.jokeData]);\r\n\r\n  }\r\n    \r\n    console.log(props.jokeData)\r\n\r\n    return(\r\n        <div className=\"jokesDiv\">\r\n            <div className=\"jokeCards\">\r\n            <Typography variant=\"h4\">Generate a joke</Typography>\r\n                <div className=\"jokeCardWrapper\">\r\n                    <Card className=\"jokeCard\">\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\">{ props.jokeData.setup }</Typography>\r\n                            <Typography variant=\"h5\">{ props.jokeData.delivery }</Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n                    <IconButton \r\n                        onClick = { () => { props.getJoke() }}\r\n                        variant=\"contained\"\r\n                    >\r\n                        <RefreshIcon/>\r\n                        <Typography variant=\"h6\">Generate New</Typography>\r\n                    </IconButton>\r\n                    \r\n                    <IconButton\r\n                        aria-label=\"save\"   \r\n                        onClick = { () => {\r\n                            saveJoke();      \r\n                        }} \r\n                        >\r\n                        <SaveIcon/>\r\n                        <Typography variant=\"h6\">Save</Typography>\r\n                    </IconButton> \r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n\r\n};\r\n\r\nexport default Jokes;","import { AppBar, Drawer, IconButton, List, ListItem, ListItemIcon, Toolbar, Typography } from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nfunction TopHeader() {\r\n\r\n    const [showMenu, setShowMenu] = useState(false);\r\n\r\n    return(\r\n\r\n        <AppBar position =\"static\" className=\"topBar\">\r\n            <Toolbar variant=\"dense\">\r\n                <IconButton \r\n                edge=\"start\" className=\"menuBtn\" \r\n                color=\"inherit\"\r\n                aria-label=\"menu\"\r\n                onClick= { () => {\r\n                    setShowMenu(true)\r\n                }}>\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Drawer\r\n                    open={ showMenu }\r\n                    onClose={ () => { setShowMenu(false) } }\r\n                >\r\n                    <List\r\n                        onClick = { () => { setShowMenu(false)}}\r\n                    >\r\n                        <ListItem button component={Link} to=\"/\">\r\n                            <ListItemIcon>\r\n                                <HomeIcon />\r\n                                <Typography variant=\"h6\">Generate a joke</Typography>\r\n                            </ListItemIcon>\r\n                        </ListItem>\r\n                        \r\n                        <ListItem button component={Link} to=\"/addJoke\">\r\n                            <ListItemIcon>\r\n                                <AddCircleIcon />\r\n                                <Typography variant=\"h6\">Add a joke</Typography>\r\n                            </ListItemIcon>\r\n                        </ListItem>\r\n\r\n                        <ListItem button component={Link} to=\"/savedjokes\">\r\n                            <ListItemIcon>\r\n                                <BookmarksIcon />\r\n                                <Typography variant=\"h6\">Saved jokes</Typography>\r\n                            </ListItemIcon>\r\n                        </ListItem>\r\n                    </List>\r\n                </Drawer>\r\n                <Typography variant=\"h6\" color=\"inherit\">\r\n                    DevJokes\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default TopHeader;","import { Card, CardContent, IconButton, Typography } from \"@material-ui/core\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nfunction DeleteJoke(props){\r\n\r\n    const history = useHistory();\r\n    const { id } = useParams(); \r\n\r\n    const targetJoke = props.jokeArray.filter((joke) => {\r\n        return (joke.id === id);\r\n    })[0];\r\n\r\n    const deleteTargetJoke = () => {\r\n        let helperVar =  props.jokeArray.filter((joke) => {\r\n            return (joke.id !== id);\r\n\r\n        });\r\n\r\n        props.setJokeArray([...helperVar]);\r\n        history.push(\"/savedjokes\");\r\n    };\r\n\r\n    return(\r\n    <div className=\"jokesDiv\">\r\n        <div className=\"jokeCardWrapper\">\r\n            <div className=\"targetJoke\">\r\n                <Typography variant=\"h3\">Delete this joke?</Typography>\r\n                <Card className=\"jokeCard\">\r\n                    <CardContent>\r\n                        <Typography variant=\"h5\">{ targetJoke.setup }</Typography>\r\n                        <Typography variant=\"h5\">{ targetJoke.delivery }</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n            <IconButton \r\n                onClick = { () => { deleteTargetJoke() }}\r\n                variant=\"contained\"\r\n            >\r\n                <DeleteForeverIcon/>\r\n                <Typography variant=\"h6\">Delete</Typography>\r\n            </IconButton>\r\n\r\n            <IconButton \r\n                onClick = { () => { history.push(\"/savedjokes\") }}\r\n                variant=\"contained\"\r\n            >\r\n                <CancelIcon/>\r\n                <Typography variant=\"h6\">Cancel</Typography>\r\n            </IconButton>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DeleteJoke;","import { Card, CardContent, IconButton, TextField, Typography } from \"@material-ui/core\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { useHistory } from \"react-router\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\n\r\n\r\nfunction AddJoke(props){\r\n\r\n    const history = useHistory();\r\n    const [userJoke, setUserJoke] = useState(\"\");\r\n    const[error, setError] = useState({\r\n        color: \"green\",\r\n        text: \"\"\r\n    })\r\n\r\n\r\n    const saveJoke = () =>{\r\n        \r\n        const jokeFound = props.jokeArray.some(joke => joke.delivery === userJoke.delivery);\r\n\r\n        \r\n        if(!jokeFound){\r\n            props.setJokeArray([...props.jokeArray, userJoke]);\r\n            setError({\r\n                color:\"green\",\r\n                text: \"Saved\"\r\n            })\r\n        }\r\n        else{\r\n            setError({\r\n                color:\"red\",\r\n                text: \"This masterpiece is already saved\"\r\n            })\r\n        }\r\n\r\n        console.log(userJoke.delivery);\r\n    }\r\n\r\n    return(\r\n<div className=\"jokesDiv\">\r\n            <div className=\"jokeCards\">\r\n            <Typography variant=\"h4\">Write your own joke</Typography>\r\n                <div className=\"jokeCardWrapper\">\r\n                    <Card className=\"jokeCard\">\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\"></Typography>\r\n                            <TextField\r\n                                label=\"Write your joke here\"\r\n                                multiline\r\n                                rows={4}\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange = { (e) => {\r\n                                    setUserJoke({\r\n                                        id : uuid(),\r\n                                        error: false,\r\n                                        setup: \"\",\r\n                                        delivery: e.target.value\r\n                                    });\r\n                                    \r\n                                }}\r\n                                />\r\n                           \r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n                    \r\n                    <IconButton\r\n                        aria-label=\"save\"   \r\n                        onClick = { () => {\r\n                            saveJoke();\r\n                        }} \r\n                        >\r\n                        <SaveIcon/>\r\n                        <Typography variant=\"h6\">Save</Typography>\r\n                    </IconButton> \r\n                    \r\n                    <IconButton \r\n                        onClick = { () => { history.push(\"/\") }}\r\n                        variant=\"contained\"\r\n                    >\r\n                        <CancelIcon/>\r\n                        <Typography variant=\"h6\">Cancel</Typography>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" \r\n                    style={{\r\n                        color: error.color\r\n                    }}>{ error.text }</Typography>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddJoke;","const { Typography } = require(\"@material-ui/core\");\r\n\r\nfunction BottomFooter(){\r\n\r\n    return(\r\n\r\n        <div className=\"botFooter\" color=\"inheritance\">\r\n            <Typography variant=\"h6\">2021 &copy; J.L</Typography>\r\n        </div>\r\n            \r\n        \r\n    );\r\n};\r\n\r\nexport default BottomFooter;","import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route\r\n} from 'react-router-dom';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Backdrop, CircularProgress, Typography } from '@material-ui/core';\r\n\r\n\r\n//Components\r\nimport SavedJokes from './components/SavedJokes';\r\nimport Jokes from './components/Jokes';\r\nimport TopHeader from './components/TopHeader';\r\nimport DeleteJoke from './components/DeleteJoke';\r\nimport AddJoke from './components/AddJoke';\r\nimport BottomFooter from './components/BottomFooter';\r\n\r\n\r\n//JokeAPI: https://sv443.net/jokeapi/v2/#getting-started\r\n\r\nfunction App() {\r\n\r\n  //Variables\r\n  const [jokeData, setJokeData] = useState({\r\n    error: false,\r\n    setup: \"\",\r\n    delivery: \"\"\r\n  })\r\n  const [jokeArray, setJokeArray] = useState([]);\r\n  const [jokeDataRetrieved, setJokeDataRetrieved] = useState(false);\r\n\r\n  //Open from Local Storage\r\n  const getJokesFromLocal = () => {\r\n    if(localStorage.getItem(\"jokes\")) {\r\n      setJokeArray(JSON.parse(localStorage.getItem(\"jokes\")));\r\n    }\r\n    else {\r\n      setJokeArray([      \r\n        {\r\n        id : uuid(),\r\n        error: false,\r\n        setup: \"Tämä on 2 vaiheinen vitsi\",\r\n        delivery: \"tässä vastaus\"\r\n      },\r\n      {\r\n        id : uuid(),\r\n        error: false,\r\n        setup: \"\",\r\n        delivery: \"Tämä on 1-vaiheinen vitsi\"\r\n      }\r\n    ])\r\n    }\r\n  }\r\n\r\n  //Save jokes to Local Storage\r\n  const setJokesToLocal = () => {\r\n    localStorage.setItem(\"jokes\", JSON.stringify(jokeArray));\r\n  };\r\n\r\n\r\n  //fetching joke\r\n  const getJoke = async() => {\r\n\r\n    try{\r\n  \r\n      const conn = await fetch(\"https://v2.jokeapi.dev/joke/programming\");\r\n      const data = await conn.json();\r\n  \r\n      if(data.type ===  \"single\"){\r\n        setJokeData({\r\n          id : uuid(),\r\n          error: false,\r\n          setup: \"\",\r\n          delivery: data.joke,\r\n        });\r\n      }\r\n      else{ \r\n        setJokeData({\r\n          id : uuid(),\r\n          error: false,\r\n          setup: data.setup,\r\n          delivery: data.delivery\r\n        });\r\n      }\r\n\r\n      setJokeDataRetrieved(true);\r\n  \r\n    }\r\n\r\n    catch(error){\r\n      setJokeData({\r\n        id : \"\",\r\n        error: true,\r\n        setup: \"\",\r\n        delivery: \"\"\r\n      });\r\n      console.log(\"error\");\r\n\r\n    }\r\n  };\r\n  \r\n  //Get jokes when page refresh\r\n  useEffect( () => {\r\n    getJokesFromLocal();\r\n  }, []);\r\n\r\n  useEffect( () => {\r\n    getJoke();\r\n  }, [jokeArray]);\r\n\r\n  useEffect( () => {\r\n    setJokesToLocal();\r\n  }, [jokeArray]);\r\n\r\n\r\n  return(\r\n    <>\r\n\r\n    <Router basename=\"/devjokes\">\r\n      <TopHeader/>\r\n      <Route path=\"/\" exact>\r\n        {(jokeData.error)\r\n          ? <Typography variant=\"h4\" color=\"error\">Could not contact server</Typography>\r\n        : (jokeDataRetrieved)\r\n          ? <Jokes \r\n              jokeData = { jokeData }\r\n              getJoke = { getJoke}\r\n              setJokeArray = { setJokeArray }\r\n              jokeArray = { jokeArray }\r\n          />\r\n          :<Backdrop open={true}>\r\n            <CircularProgress color=\"inherit\" />\r\n          </Backdrop>\r\n        }\r\n\r\n      </Route>\r\n      <Route path=\"/savedjokes\">\r\n        <SavedJokes\r\n            setJokeArray = { setJokeArray }\r\n            jokeArray = { jokeArray} \r\n            /> \r\n      </Route>\r\n      <Route path=\"/deletejoke/:id\">\r\n        <DeleteJoke\r\n          jokeArray = { jokeArray }\r\n          setJokeArray = { setJokeArray }\r\n        />\r\n      </Route>\r\n      <Route path=\"/addjoke\"\r\n      >\r\n        <AddJoke\r\n          setJokeData = { setJokeData }\r\n          setJokeArray = { setJokeArray }\r\n          jokeArray = { jokeArray }\r\n        />\r\n      </Route>\r\n      \r\n      <BottomFooter/>\r\n\r\n    </Router>\r\n\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  \r\n  <App />,\r\n  document.getElementById('root')\r\n\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}