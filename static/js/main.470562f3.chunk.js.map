{"version":3,"sources":["components/SavedJokes.js","components/Jokes.js","components/TopHeader.js","components/DeleteJoke.js","components/AddJoke.js","components/BottomFooter.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["SavedJokes","props","jokeArray","length","className","Typography","variant","map","joke","idx","Card","CardContent","setup","delivery","IconButton","component","Link","to","id","Jokes","console","log","jokeData","onClick","getJoke","aria-label","setJokeArray","TopHeader","useState","showMenu","setShowMenu","AppBar","position","Toolbar","edge","color","Drawer","open","onClose","List","ListItem","button","ListItemIcon","DeleteJoke","history","useHistory","useParams","targetJoke","filter","helperVar","push","deleteTargetJoke","AddJoke","userJoke","setUserJoke","text","error","setError","TextField","label","multiline","rows","fullWidth","onChange","e","uuid","target","value","some","style","require","BottomFooter","useStyles","makeStyles","icon","fontSize","About","styles","gutterBottom","href","rel","App","setJokeData","jokeDataRetrieved","setJokeDataRetrieved","a","fetch","conn","json","data","type","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","basename","path","exact","Backdrop","CircularProgress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.470562f3.chunk.js","sourcesContent":["import { Card, CardContent, IconButton, Typography } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link } from \"react-router-dom\";\n\nfunction SavedJokes(props){\n\n\n    if(props.jokeArray.length > 0){\n        return(\n            <div className=\"savedJokes\">\n                <div className=\"savedJokesContainer\">\n                    <Typography variant=\"h4\" className=\"savedJokesHeader\">Saved jokes</Typography>\n    \n                    { props.jokeArray.map((joke, idx) => (\n    \n                        <div key={idx} className=\"jokeCardWrapper\">\n                            <Card className=\"jokeCard\">\n                            <CardContent>\n                                <Typography variant=\"h5\">{ joke.setup }</Typography>\n                                <Typography variant=\"h5\">{ joke.delivery }</Typography>\n                            </CardContent>\n                            </Card>\n                        \n    \n                            <IconButton\n                                component={Link}\n                                to={`/deletejoke/${joke.id}`}\n                                variant=\"contained\"\n                            >\n                                <DeleteIcon/>\n                                <Typography variant=\"h6\">DeleteJoke</Typography>\n                            </IconButton>\n                        </div>\n    \n                    )) }\n                </div>\n            </div>\n        );\n    }\n    else{\n        return(\n            <div className=\"savedJokes\">\n            <div className=\"savedJokesContainer\">\n                <Typography variant=\"h4\" className=\"savedJokesHeader\">Saved jokes</Typography>\n                <Typography variant=\"h5\">There is no saved jokes</Typography>\n\n\n            </div>\n        </div>\n        );  \n    }\n\n\n};\n\nexport default SavedJokes;","import { Card, CardContent, IconButton, Typography } from \"@material-ui/core\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nfunction Jokes(props){\n\n    //saving Joke:\n    const saveJoke = () =>{\n        \n      props.setJokeArray([...props.jokeArray, props.jokeData]);\n\n  }\n    \n    console.log(props.jokeData)\n\n    return(\n        <div className=\"jokesDiv\">\n            <div className=\"jokesContainer\">\n                <div className=\"jokeCards\">\n                <Typography variant=\"h4\">Generate a joke</Typography>\n                    <div className=\"jokeCardWrapper\">\n                        <Card className=\"jokeCard\">\n                            <CardContent>\n                                <Typography variant=\"h5\">{ props.jokeData.setup }</Typography>\n                                <Typography variant=\"h5\">{ props.jokeData.delivery }</Typography>\n                            </CardContent>\n                        </Card>\n                    </div>\n                        <IconButton \n                            onClick = { () => { props.getJoke() }}\n                            variant=\"contained\"\n                        >\n                            <RefreshIcon/>\n                            <Typography variant=\"h6\">Generate New</Typography>\n                        </IconButton>\n                        \n                        <IconButton\n                            aria-label=\"save\"   \n                            onClick = { () => {\n                                saveJoke();      \n                            }} \n                            >\n                            <SaveIcon/>\n                            <Typography variant=\"h6\">Save</Typography>\n                        </IconButton> \n                </div>\n            </div>\n        </div>\n    );\n    \n\n};\n\nexport default Jokes;","import { AppBar, Drawer, IconButton, List, ListItem, ListItemIcon, Toolbar, Typography } from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nfunction TopHeader() {\n\n    const [showMenu, setShowMenu] = useState(false);\n\n    return(\n\n        <AppBar position =\"static\" className=\"topBar\">\n            <Toolbar variant=\"dense\">\n                <IconButton \n                edge=\"start\" className=\"menuBtn\" \n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick= { () => {\n                    setShowMenu(true)\n                }}>\n                    <MenuIcon />\n                </IconButton>\n                <Drawer\n                    open={ showMenu }\n                    onClose={ () => { setShowMenu(false) } }\n                >\n                    <List\n                        onClick = { () => { setShowMenu(false)}}\n                    >\n                        <ListItem button component={Link} to=\"/\">\n                            <ListItemIcon>\n                                <HomeIcon />\n                                <Typography variant=\"h6\">Generate a Joke</Typography>\n                            </ListItemIcon>\n                        </ListItem>\n                        \n                        <ListItem button component={Link} to=\"/addJoke\">\n                            <ListItemIcon>\n                                <AddCircleIcon />\n                                <Typography variant=\"h6\">Add a Joke</Typography>\n                            </ListItemIcon>\n                        </ListItem>\n\n                        <ListItem button component={Link} to=\"/savedjokes\">\n                            <ListItemIcon>\n                                <BookmarksIcon />\n                                <Typography variant=\"h6\">Saved Jokes</Typography>\n                            </ListItemIcon>\n                        </ListItem>\n\n                        <ListItem button component={Link} to=\"/about\">\n                            <ListItemIcon>\n                                <InfoIcon />\n                                <Typography variant=\"h6\">About this App</Typography>\n                            </ListItemIcon>\n                        </ListItem>\n                    </List>\n                </Drawer>\n                <Typography variant=\"h6\" color=\"inherit\">\n                    DevJokes\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default TopHeader;","import { Card, CardContent, IconButton, Typography } from \"@material-ui/core\";\nimport { useHistory, useParams } from \"react-router\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nfunction DeleteJoke(props){\n\n    const history = useHistory();\n    const { id } = useParams(); \n\n    const targetJoke = props.jokeArray.filter((joke) => {\n        return (joke.id === id);\n    })[0];\n\n    const deleteTargetJoke = () => {\n        let helperVar =  props.jokeArray.filter((joke) => {\n            return (joke.id !== id);\n\n        });\n\n        props.setJokeArray([...helperVar]);\n        history.push(\"/savedjokes\");\n    };\n\n    return(\n    <div className=\"jokesDiv\">\n        <div className=\"jokesContainer\">\n            <div className=\"jokeCardWrapper\">\n                <div className=\"targetJoke\">\n                    <Typography variant=\"h3\">Delete this joke?</Typography>\n                    <Card className=\"jokeCard\">\n                        <CardContent>\n                            <Typography variant=\"h5\">{ targetJoke.setup }</Typography>\n                            <Typography variant=\"h5\">{ targetJoke.delivery }</Typography>\n                        </CardContent>\n                    </Card>\n                </div>\n                <IconButton \n                    onClick = { () => { deleteTargetJoke() }}\n                    variant=\"contained\"\n                >\n                    <DeleteForeverIcon/>\n                    <Typography variant=\"h6\">Delete</Typography>\n                </IconButton>\n\n                <IconButton \n                    onClick = { () => { history.push(\"/savedjokes\") }}\n                    variant=\"contained\"\n                >\n                    <CancelIcon/>\n                    <Typography variant=\"h6\">Cancel</Typography>\n                </IconButton>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default DeleteJoke;","import { Card, CardContent, IconButton, TextField, Typography } from \"@material-ui/core\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { useHistory } from \"react-router\";\nimport { v4 as uuid } from 'uuid';\nimport { useState } from \"react\";\n\n\n\n\n\nfunction AddJoke(props){\n\n    const history = useHistory();\n    const [userJoke, setUserJoke] = useState(\"\");\n    const[error, setError] = useState({\n        color: \"green\",\n        text: \"\"\n    })\n\n\n    const saveJoke = () =>{\n        \n        const jokeFound = props.jokeArray.some(joke => joke.delivery === userJoke.delivery);\n\n        \n        if(!jokeFound){\n            props.setJokeArray([...props.jokeArray, userJoke]);\n            setError({\n                color:\"green\",\n                text: \"Saved\"\n            })\n        }\n        else{\n            setError({\n                color:\"red\",\n                text: \"This masterpiece is already saved\"\n            })\n        }\n\n        console.log(userJoke.delivery);\n    }\n\n    return(\n        <div className=\"addJokes\">\n            <div className=\"addJokesContainer\">\n                <div className=\"jokeCards\">\n                <Typography variant=\"h4\" >Write your own joke</Typography>\n                    <div className=\"jokeCardWrapper\">\n                        <Card className=\"jokeCard\">\n                            <CardContent>\n                                <Typography variant=\"h5\"></Typography>\n                                <TextField\n                                    label=\"Write your joke here\"\n                                    multiline\n                                    rows={4}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    onChange = { (e) => {\n                                        setUserJoke({\n                                            id : uuid(),\n                                            error: false,\n                                            setup: \"\",\n                                            delivery: e.target.value\n                                        });\n                                        \n                                    }}\n                                    />\n                            \n                            </CardContent>\n                        </Card>\n                    </div>\n                </div>\n                    \n                    <IconButton\n                        aria-label=\"save\"   \n                        onClick = { () => {\n                            saveJoke();\n                        }} \n                        >\n                        <SaveIcon/>\n                        <Typography variant=\"h6\">Save</Typography>\n                    </IconButton> \n                    \n                    <IconButton \n                        onClick = { () => { history.push(\"/\") }}\n                        variant=\"contained\"\n                    >\n                        <CancelIcon/>\n                        <Typography variant=\"h6\">Cancel</Typography>\n                    </IconButton>\n                    <Typography variant=\"h6\" \n                    style={{\n                        color: error.color\n                    }}>{ error.text }</Typography>\n            </div>\n        </div>\n    )\n}\n\nexport default AddJoke;","const { Typography } = require(\"@material-ui/core\");\n\nfunction BottomFooter(){\n\n    return(\n\n        <div className=\"botFooter\" color=\"inheritance\">\n            <Typography variant=\"h7\">2021 &copy; J.Laakso</Typography>\n        </div>\n            \n        \n    );\n};\n\nexport default BottomFooter;","import { Link, makeStyles, Typography } from \"@material-ui/core\";\n\n//icons:\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst useStyles= makeStyles({\n        \n    icon: {\n            fontSize: \"80px\"\n        }\n})\n\nfunction About(){\n\n    const styles = useStyles();\n\n    return(\n        <div className=\"aboutDiv\">\n            <Typography variant=\"h3\" gutterBottom>About this App</Typography>\n            <Typography variant=\"body1\" gutterBottom>\n                This app is developed by Joni Laakso for a school assignment.\n                App uses <a href=\"https://sv443.net/jokeapi/v2/#info\" rel=\"noreferrer\" target=\"_blank\">JokeApi</a> for fetching jokes.\n            </Typography>\n\n            <div className=\"contactDiv\">\n                <Typography variant=\"h3\" gutterBottom>Contact:</Typography>\n                <Link href=\"https://www.linkedin.com/in/joni-laakso/\" rel=\"noreferrer\" target=\"_blank\"  >\n                    <LinkedInIcon className={styles.icon} />\n                </Link>\n                <Link href=\"https://www.instagram.com/jonseredix/\" rel=\"noreferrer\" target=\"_blank\" >\n                    <InstagramIcon  className={styles.icon} style={{color:\"#e91e63\"}}/>\n                </Link>\n\n                <Link href=\"https://github.com/cjola002-xamk\" rel=\"noreferrer\" target=\"_blank\" >\n                    <GitHubIcon className={styles.icon} style={{color:\"#212121\"}}/>\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default About;","import { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n    BrowserRouter as Router,\n    Route\n} from 'react-router-dom';\nimport { v4 as uuid } from 'uuid';\nimport { Backdrop, CircularProgress, Typography } from '@material-ui/core';\n\n\n//Components\nimport SavedJokes from './components/SavedJokes';\nimport Jokes from './components/Jokes';\nimport TopHeader from './components/TopHeader';\nimport DeleteJoke from './components/DeleteJoke';\nimport AddJoke from './components/AddJoke';\nimport BottomFooter from './components/BottomFooter';\nimport About from './components/About';\n\n\n//JokeAPI: https://sv443.net/jokeapi/v2/#getting-started\n\nfunction App() {\n\n  //Variables\n  const [jokeData, setJokeData] = useState({\n    error: false,\n    setup: \"\",\n    delivery: \"\"\n  })\n  const [jokeArray, setJokeArray] = useState([]);\n  const [jokeDataRetrieved, setJokeDataRetrieved] = useState(false);\n\n\n  \n\n  //Open from Local Storage\n  const getJokesFromLocal = () => {\n    if(localStorage.getItem(\"jokes\")) {\n      setJokeArray(JSON.parse(localStorage.getItem(\"jokes\")));\n    }\n    else {\n      setJokeArray([      \n        {\n        id : uuid(),\n        error: false,\n        setup: \"Tämä on 2 vaiheinen vitsi\",\n        delivery: \"tässä vastaus\"\n      },\n      {\n        id : uuid(),\n        error: false,\n        setup: \"\",\n        delivery: \"Tämä on 1-vaiheinen vitsi\"\n      }\n    ])\n    }\n  }\n\n  //Save jokes to Local Storage\n  const setJokesToLocal = () => {\n    localStorage.setItem(\"jokes\", JSON.stringify(jokeArray));\n  };\n\n\n  //fetching joke\n  const getJoke = async() => {\n\n    try{\n  \n      const conn = await fetch(\"https://v2.jokeapi.dev/joke/programming\");\n      const data = await conn.json();\n  \n      if(data.type ===  \"single\"){\n        setJokeData({\n          id : uuid(),\n          error: false,\n          setup: \"\",\n          delivery: data.joke,\n        });\n      }\n      else{ \n        setJokeData({\n          id : uuid(),\n          error: false,\n          setup: data.setup,\n          delivery: data.delivery\n        });\n      }\n\n      setJokeDataRetrieved(true);\n  \n    }\n\n    catch(error){\n      setJokeData({\n        id : \"\",\n        error: true,\n        setup: \"\",\n        delivery: \"\"\n      });\n      console.log(\"error\");\n\n    }\n  };\n  \n  //Get jokes when page refresh\n  useEffect( () => {\n    getJokesFromLocal();\n  }, []);\n\n  useEffect( () => {\n    getJoke();\n  }, [jokeArray]);\n\n  useEffect( () => {\n    setJokesToLocal();\n  }, [jokeArray]);\n\n\n  return(\n    <>\n    \n\n    <Router basename=\"/devjokes\">\n      <TopHeader/>\n      <div className=\"appContainer\">\n        <Route path=\"/\" exact>\n          {(jokeData.error)\n            ? <Typography variant=\"h4\" color=\"error\">Could not contact server</Typography>\n          : (jokeDataRetrieved)\n            ? <Jokes \n                jokeData = { jokeData }\n                getJoke = { getJoke}\n                setJokeArray = { setJokeArray }\n                jokeArray = { jokeArray }\n            />\n            :<Backdrop open={true}>\n              <CircularProgress color=\"inherit\" />\n            </Backdrop>\n          }\n\n        </Route>\n        <Route path=\"/savedjokes\">\n          <SavedJokes\n              setJokeArray = { setJokeArray }\n              jokeArray = { jokeArray} \n              /> \n        </Route>\n        <Route path=\"/deletejoke/:id\">\n          <DeleteJoke\n            jokeArray = { jokeArray }\n            setJokeArray = { setJokeArray }\n          />\n        </Route>\n        <Route path=\"/addjoke\"\n        >\n          <AddJoke\n            setJokeData = { setJokeData }\n            setJokeArray = { setJokeArray }\n            jokeArray = { jokeArray }\n          />\n        </Route>\n\n        <Route path=\"/about\">\n          <About/>\n        </Route>\n      </div>\n\n      <BottomFooter/>\n\n    </Router>\n\n\n\n\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n  <App />,\n  document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}